# -*- coding: utf-8 -*-
"""exercicio.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XlxpCkQHXtog2p_4ZZSWiFY1DhwmIbhI

Gustavo Lima Carvalho - 202010404

1. Desenvolva um código que lhe permita abrir uma imagem RGB ou BGR de sua preferência, utilizando a interface python do OpenCV. Logo depois, converta a imagem para escala de cinza e exiba as duas imagens lado a lado na tela.
"""

! sudo apt install tesseract-ocr 
! pip install pytesseract
! sudo apt-get install tesseract-ocr-por


import pytesseract
import shutil
import os
import random
try:
 from PIL import Image
except ImportError:
 import Image

import numpy as np
import pandas as pd
import cv2 as cv 
from google.colab.patches import cv2_imshow
from skimage import io
from PIL import Image 
import matplotlib.pylab as plt
import scipy

urls = ["image.jpg"]

for url in urls:
  image = cv.imread(url) 
  image_bw = cv.cvtColor(image, cv.COLOR_BGR2GRAY)
  
  image_bw2 = cv.cvtColor(image_bw,cv.COLOR_GRAY2BGR)

  display = np.hstack((image, image_bw2))

  cv2_imshow(display)

"""Utilizando o código fonte das nossas aulas como base, carregue uma imagem contendo pelo menos uma face (pode ser a imagem carregada no item 1), depois carregue o modelo de detecção de faces utilizado nas nossas aulas anteriores. Construa um código de detecção de faces, encontre a caixa envolvente da face na imagem. Pinte o retângulo ao redor da(s) face(s) encontrada(s) e exiba a imagem pintada na tela. Documente as funções utilizadas no código."""

face_cascade = cv.CascadeClassifier('haarcascade_frontalface_default.xml')


faces = face_cascade.detectMultiScale(image,scaleFactor = 1.05, minNeighbors = 7, minSize = (30,30), flags = cv.CASCADE_SCALE_IMAGE)


for (x,y,w,h) in faces:
     cv.rectangle(image,(x,y),(x+w,y+h),(0,0,255),2)

cv2_imshow(image)

"""Carregue uma imagem que contenha uma página de texto de um documento digitalizado de sua preferência. Uma vez carregada a imagem, utilize o OCR com o qual trabalhamos na nossa última aula (Tesseract), reconheça o texto, e imprima o texto reconhecido na tela. Documente as funções utilizadas no código."""

imageText = pytesseract.image_to_string(image, lang='por')
print(imageText)